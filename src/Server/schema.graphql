input InSection {
    id: String
    type: Int!
    page: String!
    content: [InItem]
}

input InItem {
    name: String
    type: String!
    style: String!
    content: String!
    action: String
    actionStyle: String
    actionType: String
    actionContent: String
}

input InImage {
    id: String!
    name: String!
    location: String!
    created: String!
    type: String!
    size: Int!
    tags: [String]
}
input InLogo {
    content: String!
}
input InSeo {
    description: String
    keywords: [String]
    viewport: String
    charSet: String
    url: String
    image: String
    image_alt: String
    published_time: String
    modified_time: String
    author: String
    locale: String
}
input InNavigation {
    id: String!
    type: String!
    page: String!
    seo: InSeo
    sections: [String]!
}

input InLanguage {
    label: String!
    symbol: String!
    default: Boolean
}
type INewLanguage {
    label: String!
    symbol: String!
    default: Boolean
}
type IUser {
    id: String!
    name: String
    email: String!
    password: String!
    role: String
    avatar: String
}

type ILogo {
    id: String!
    type: String!
    content: String!
}

type IImage {
    id: String!
    name: String!
    location: String!
    created: String!
    type: String!
    size: Int!
    tags: [String]!
}

type IItem {
    name: String
    type: String!
    style: String
    content: String!
    action: String
    actionStyle: String
    actionType: String
    actionContent: String
}
type ISection {
    id: String
    page: String
    type: Int!
    content: [IItem]
}
type ISeo {
    description: String
    keywords: [String]
    viewport: String
    charSet: String
    url: String
    image: String
    image_alt: String
    published_time: String
    modified_time: String
    author: String
    locale: String
}
type INavigation {
    id: String
    type: String!
    page: String!
    seo: ISeo
    sections: [String]!
}

type ILoadData {
    name: String
    sizeOnDisk: Float
    empty: Boolean
}

type QueryMongo {
    setupAdmin: IUser
    getMongoDBUri: String
    loadData: [ILoadData!]!
    createDatabase: String!
    getNavigationCollection: [INavigation!]!
    getSections(ids: [String]): [ISection!]!
    getImages(tags: String!): [IImage!]!
    getLogo: ILogo!
    getUser(email: String): IUser
    getLanguages: [INewLanguage]
}

scalar JSON

type MutationMongo {
    createNavigation(navigation: InNavigation!): String!
    addUpdateNavigationItem(pageName: String!, sections: [String]): String!
    updateNavigation(page: String!, sections: [String]): String!
    replaceUpdateNavigation(oldPageName: String!,navigation: InNavigation): String!
    addUpdateSectionItem(section: InSection!, pageName: String): String!
    removeSectionItem(id:String!): String!
    deleteNavigationItem(pageName:String!): String!
    saveImage(image: InImage!): String!
    deleteImage(id: String!): String!
    saveLogo(content: String!): String!
    addUpdateLanguage(language: InLanguage, translations: JSON): String!
    deleteLanguage(language: InLanguage): String!
}


type Query {
    sample: String!
    greeting: String!
    bar: String!
    mongo: QueryMongo!
}

type Mutation {
    mongo: MutationMongo!
}