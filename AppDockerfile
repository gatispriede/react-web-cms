# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7

FROM node:current-alpine

# Use production node environment by default.
ENV NODE_ENV production

RUN apk add python3 py3-pip make g++ curl
#
#RUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.6/main' >> /etc/apk/repositories
#RUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.6/community' >> /etc/apk/repositories
#RUN apk update
#RUN apk add mongodb=3.4.4-r0

RUN npm i -g sass

WORKDIR /app
# Yarn cache ensurance

# Copy the rest of the source files into the image.
COPY ./IP.ts /IP.ts
COPY ./yarn.lock ./yarn.lock
COPY ./Manifest.ts ./Manifest.ts
COPY ./Scripts ./Scripts
COPY ./certificates ./certificates
COPY ./dev.sh ./dev.sh
COPY ./next-i18next.config.js ./next-i18next.config.js
COPY ./next-sitemap.config.cjs ./next-sitemap.config.cjs
COPY ./nodemon.json ./nodemon.json
COPY ./package.json ./package.json
COPY ./run.sh ./run.sh
COPY ./runDevServer.sh /runDevServer.sh
COPY ./src ./src

RUN --mount=type=cache,target=/root/.yarn YARN_CACHE_FOLDER=/root/.yarn yarn --frozen-lockfile
#setup admin in db

RUN npm run build-docker
#USER node