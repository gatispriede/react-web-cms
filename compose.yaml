# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  mongodb:
    image: 'mongo:7.0'
    container_name: mongodb
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://mongodb:27017/ --quiet
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - db
      - back-end
      - front-end
  server:
    container_name: server
    build:
      context: .
      dockerfile: ServerDockerfile
    depends_on:
      mongodb: {
        condition: service_started
      }
    environment:
      - NODE_ENV=production
    healthcheck:
      test:  curl --fail "http://server:3000?query=%7B%0A%09sample%0A%7D%0A" || exit 1
      interval: 10s
    command: npm run standalone-graphql-docker
    networks:
      - db
      - back-end
    ports:
      - 3000:3000
    expose:
      - 3000
  app:
    image: node-app
    container_name: front
    depends_on:
      mongodb: {
        condition: service_started
      }
      server: {
        condition: service_healthy
      }
    command: npm run start-docker
    build:
      context: .
      dockerfile: AppDockerfile
    environment:
      - BUILD_PORT=3000
    networks:
      - db
      - front-end
      - back-end
    ports:
      - 80:80
    expose:
      - 80
networks:
  front-end:
  db:
  back-end: